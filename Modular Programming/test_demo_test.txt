>>> from testing_demo import *

***********************************
Unit 1 Tests - my_squareroot()
***********************************

General Case #1
>>> my_squareroot(4)
2.0

General Case #2
>>> my_squareroot(7)
2.6457513110645907


Unusual Case #1 - negative input
>>> my_squareroot(-4)
Traceback (most recent call last):
ValueError: negative number cannot be raised to a fractional power


Unusual Case #2
>>> my_squareroot()
Traceback (most recent call last):
TypeError: my_squareroot() takes exactly 1 argument (0 given)

Unusual Case #3
>>> my_squareroot("4")
Traceback (most recent call last):
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'float'

Corner Case
>>> my_squareroot(0)
0.0


This is an example of testing non-exact expected values.  In this case, we verify that a
resulting value for a function gamesim() falls within a certain range.
Notice that we create our own function to do this more complex test.  The indents for the function
created with ... followed by 4 spaces.
>>> def simtest(numgames):
...   gameswon = gamesim(numgames)
...   return 0 <= gameswon and gameswon <= numgames
>>> simtest(500)
True